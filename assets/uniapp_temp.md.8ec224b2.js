import{_ as s,c as n,o as a,a as l}from"./app.767d8b40.js";const b=JSON.parse('{"title":"uniapp","description":"","frontmatter":{},"headers":[{"level":2,"title":"uniapp 介绍","slug":"uniapp-介绍","link":"#uniapp-介绍","children":[]},{"level":2,"title":"构建项目","slug":"构建项目","link":"#构建项目","children":[]},{"level":2,"title":"生命周期","slug":"生命周期","link":"#生命周期","children":[]},{"level":2,"title":"页面跳转","slug":"页面跳转","link":"#页面跳转","children":[{"level":3,"title":"switch tab 导航跳转","slug":"switch-tab-导航跳转","link":"#switch-tab-导航跳转","children":[]},{"level":3,"title":"路由传参","slug":"路由传参","link":"#路由传参","children":[]},{"level":3,"title":"小程序分包配置","slug":"小程序分包配置","link":"#小程序分包配置","children":[]}]},{"level":2,"title":"UniApp 常见组件简介","slug":"uniapp-常见组件简介","link":"#uniapp-常见组件简介","children":[]},{"level":2,"title":"UniApp 常见API","slug":"uniapp-常见api","link":"#uniapp-常见api","children":[]},{"level":2,"title":"自定义组件 和 通信","slug":"自定义组件-和-通信","link":"#自定义组件-和-通信","children":[]},{"level":2,"title":"uniapp vuex状态管理","slug":"uniapp-vuex状态管理","link":"#uniapp-vuex状态管理","children":[]},{"level":2,"title":"运行环境判断与跨端兼容","slug":"运行环境判断与跨端兼容","link":"#运行环境判断与跨端兼容","children":[{"level":3,"title":"项目初始化  ok","slug":"项目初始化-ok","link":"#项目初始化-ok","children":[]},{"level":3,"title":"首页的实现 ok","slug":"首页的实现-ok","link":"#首页的实现-ok","children":[]},{"level":3,"title":"用接口请求数据","slug":"用接口请求数据","link":"#用接口请求数据","children":[]},{"level":3,"title":"首页 【推荐、资讯】 平滑切换实现","slug":"首页-【推荐、资讯】-平滑切换实现","link":"#首页-【推荐、资讯】-平滑切换实现","children":[]},{"level":3,"title":"瀑布流","slug":"瀑布流","link":"#瀑布流","children":[]}]},{"level":2,"title":"切换轮播图版块","slug":"切换轮播图版块","link":"#切换轮播图版块","children":[]},{"level":2,"title":"滚动首页-文章的版块，版块导航栏置顶，并切换版块之后，新的版块滚动距离清空","slug":"滚动首页-文章的版块-版块导航栏置顶-并切换版块之后-新的版块滚动距离清空","link":"#滚动首页-文章的版块-版块导航栏置顶-并切换版块之后-新的版块滚动距离清空","children":[]},{"level":2,"title":"滚动到底部请求新数据，下拉页面做刷新","slug":"滚动到底部请求新数据-下拉页面做刷新","link":"#滚动到底部请求新数据-下拉页面做刷新","children":[]},{"level":2,"title":"动态  瀑布流 用 Grid 栅格布局","slug":"动态-瀑布流-用-grid-栅格布局","link":"#动态-瀑布流-用-grid-栅格布局","children":[]},{"level":2,"title":"分包形式 写详情页","slug":"分包形式-写详情页","link":"#分包形式-写详情页","children":[]},{"level":2,"title":"资讯详情页面 富文本解析","slug":"资讯详情页面-富文本解析","link":"#资讯详情页面-富文本解析","children":[]},{"level":2,"title":"封装一个评论组件","slug":"封装一个评论组件","link":"#封装一个评论组件","children":[]},{"level":2,"title":"用户登录、注册功能","slug":"用户登录、注册功能","link":"#用户登录、注册功能","children":[]}],"relativePath":"uniapp/temp.md"}'),p={name:"uniapp/temp.md"},e=l(`<h1 id="uniapp" tabindex="-1">uniapp <a class="header-anchor" href="#uniapp" aria-hidden="true">#</a></h1><p>vue + 微信小程序</p><p>中小型企业 常用的技术方案</p><p>此次课程：社区论坛类项目</p><p>两大块：</p><p>对uniapp入门</p><p>社区项目实战，贴近企业实践的综合项目</p><p>未登录状态</p><p>登录状态</p><p>评论 + 发表动态</p><p>完成项目 + 发布项目</p><h2 id="uniapp-介绍" tabindex="-1">uniapp 介绍 <a class="header-anchor" href="#uniapp-介绍" aria-hidden="true">#</a></h2><p>支持主流</p><p>HBuilder 对 uniapp做了很多支持</p><h2 id="构建项目" tabindex="-1">构建项目 <a class="header-anchor" href="#构建项目" aria-hidden="true">#</a></h2><p><a href="https://uniapp.dcloud.net.cn/tutorial/project.html" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/tutorial/project.html</a></p><p>添加 小程序的appid</p><p>编译配置 vue.config.js</p><p>全局配置 pages.json</p><p>全局样式 uni.scss</p><p>App.vue 不需要写 template 主要是全局生命周期函数</p><p>uniapp 支持 alias @</p><h2 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-hidden="true">#</a></h2><p>分 页面生命周期 和 组件生命周期</p><p>页面生命周期： <a href="https://uniapp.dcloud.net.cn/tutorial/page.html#lifecycle" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/tutorial/page.html#lifecycle</a> 区别于vue2的生命周期函数</p><p>组件生命周期： <a href="https://uniapp.dcloud.net.cn/tutorial/page.html#componentlifecycle" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/tutorial/page.html#componentlifecycle</a> 同vue2的</p><p>应用生命周期： <a href="https://uniapp.dcloud.net.cn/collocation/App.html#applifecycle" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/collocation/App.html#applifecycle</a> 只能在 <strong>App.vue</strong> 里监听</p><p>页面生命周期</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">onLoad 页面加载</span></span>
<span class="line"><span style="color:#A6ACCD;">onShow 监听页面展示</span></span>
<span class="line"><span style="color:#A6ACCD;">onPullDownRefresh 用户下拉刷新之后触发</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="刷新页面配置" tabindex="-1">刷新页面配置 <a class="header-anchor" href="#刷新页面配置" aria-hidden="true">#</a></h4><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">. pages.json 中</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">pages</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pages/index/index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">enablePullDownRefresh</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">. 可以监听路径对应的页面， onPullDownRefresh 函数</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>钩子函数，在整个应用的某些阶段 提供钩子函数</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">应用生命周期，只在App</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vue中才能使用</span></span>
<span class="line"><span style="color:#82AAFF;">onPageNotFound</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 找不到的生命周期</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/pages/404/404</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 路由都要在pages.json 中注册</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">页面生命周期</span></span>
<span class="line"><span style="color:#82AAFF;">onLoad</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">clearTimeout</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">onShow</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">允许页面下拉刷新，</span></span>
<span class="line"><span style="color:#A6ACCD;">需要先在pages</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json 进行允许下拉刷新的配置</span></span>
<span class="line"><span style="color:#A6ACCD;">然后才能在页面进行对应生命周期的函数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">uniapp会提供更多的生命周期，比如分享也会有对应的生命周期函数</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="页面跳转" tabindex="-1">页面跳转 <a class="header-anchor" href="#页面跳转" aria-hidden="true">#</a></h2><p>快捷输入： NAV 组件跳转 uniapp没有h标签 文本用text</p><h3 id="switch-tab-导航跳转" tabindex="-1">switch tab 导航跳转 <a class="header-anchor" href="#switch-tab-导航跳转" aria-hidden="true">#</a></h3><ol><li>创建页面</li><li>在pages.json中进行 <strong>tabBar</strong> 的配置</li><li>如果路由在tabBar中进行配置了的话，<strong>不能用uni.navigateTo</strong>，而是<strong>用uni.switchTab</strong>进行跳转</li></ol><p>todo：</p><ol><li><p>uniapp中怎么使用 iconfont</p><p><a href="https://blog.csdn.net/qq_39961695/article/details/122242022" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_39961695/article/details/122242022</a></p></li><li><p>uni.switchTab怎么传递参数？</p></li></ol><h3 id="路由传参" tabindex="-1">路由传参 <a class="header-anchor" href="#路由传参" aria-hidden="true">#</a></h3><p>在onLoad(options) options进行接收</p><h3 id="小程序分包配置" tabindex="-1">小程序分包配置 <a class="header-anchor" href="#小程序分包配置" aria-hidden="true">#</a></h3><p>参考文章： <a href="https://juejin.cn/post/7081431609785712647#heading-0" target="_blank" rel="noreferrer">https://juejin.cn/post/7081431609785712647#heading-0</a></p><p>uniapp: <a href="https://uniapp.dcloud.net.cn/collocation/pages.html#subpackages" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/collocation/pages.html#subpackages</a></p><p>有点像<strong>路由懒加载</strong>，目的都是为了提升首页加载速度，以及减少打包的体积</p><p>课件说明：因小程序有体积和资源加载限制，各家小程序平台提供了分包方式，优化小程序的下载和启动速度。</p><p>主包就是默认启动页面以及TabBar页面， 而分包是根据<strong>pages.json</strong>的配置进行划分。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">分包目录 subPages/news 放在pages同级</span></span>
<span class="line"><span style="color:#A6ACCD;">page.json</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">subPackages</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">subpages</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">pages</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &#39;news/news&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">					</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">navigationBarTitleText</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uni-app</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">和路由懒加载是差不多的，也是注册路由，然后打包是分包的，首页加载的时候并不会加载该包。</span></span>
<span class="line"><span style="color:#A6ACCD;">通过注册的路由进行访问</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>分包：将一个完整的小程序项目，按照需求划分为不同的包，在构建的时打包不同的分包，用户在使用中按需加载</p><h5 id="_1-2分包的好处" tabindex="-1">1.2分包的好处 <a class="header-anchor" href="#_1-2分包的好处" aria-hidden="true">#</a></h5><ul><li>可以优化小程序首次启用的下载时间</li><li>在多团队共同开发时可以更好的解耦协作</li></ul><h5 id="_1-3-主包-分包进行构成" tabindex="-1">1.3 主包+分包进行构成 <a class="header-anchor" href="#_1-3-主包-分包进行构成" aria-hidden="true">#</a></h5><blockquote><p>使用分包的小程序，必定包含一个主包</p></blockquote><ul><li>主包：包含了默认的启动页面、TabBar 页面以及所有分包都需要用到的公共资源</li><li>分包：分包的页面+分包页面中资源根据开发者的配置包含的某些小程序页面以及页面需要使用的私有资源</li></ul><p>一个主包 + 多个分包组成， 小程序默认进来加载主包</p><h4 id="分包的体积限制" tabindex="-1">分包的体积限制 <a class="header-anchor" href="#分包的体积限制" aria-hidden="true">#</a></h4><ul><li>目前，小程序分包的大小有以下两个限制 <ul><li>整个小程序所有的分包大小不超过20M（主包+所有分包）</li><li>单个分包/主包大小不能超过2M</li></ul></li></ul><p>主包不能引入分包的私有资源</p><h2 id="uniapp-常见组件简介" tabindex="-1">UniApp 常见组件简介 <a class="header-anchor" href="#uniapp-常见组件简介" aria-hidden="true">#</a></h2><ol><li>内置组件，和小程序相同</li><li>记住是 uniapp组件了，要按照uniapp提供的规则去使用</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">学习uniapp的组件 就像学习html的标签一样</span></span>
<span class="line"><span style="color:#A6ACCD;">view text image</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="uniapp-常见api" tabindex="-1">UniApp 常见API <a class="header-anchor" href="#uniapp-常见api" aria-hidden="true">#</a></h2><p><code>uni-app</code>的 js API 由标准 ECMAScript 的 js API 和 uni 扩展 API 这两部分组成。</p><p>请注意不要把浏览器里的 js 等价于标准 js。</p><p>对各种组件进行操作，以及各种扩展api(比如操作android的 ios的)</p><p>uniapp 对原有标签基本都做了封装，为了提供各种参数给用户用，以及为了适配各种不同的客户端。</p><p>template的渲染规则和vue的差不多</p><p>选择图片</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">chooseImage</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">count</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    sizeType</span></span>
<span class="line"><span style="color:#A6ACCD;">    sourceType</span></span>
<span class="line"><span style="color:#A6ACCD;">    success</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pageScrollTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">scrollTop</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9999999</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">duration</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">本地缓存</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setStorageSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">chatlist</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">chatList))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">onShow</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!!</span><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getStorageSync</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">chatList</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">然后进行初始化</span><span style="color:#F07178;">，</span><span style="color:#A6ACCD;">并滚动</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="自定义组件-和-通信" tabindex="-1">自定义组件 和 通信 <a class="header-anchor" href="#自定义组件-和-通信" aria-hidden="true">#</a></h2><p>自定义组件 todo</p><p>components</p><p>emit @click 父子组件通信</p><p>也可以用uniapp提供的，方便跨组件传递</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">提升到全局事件，相当于事件总线</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$on</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">click1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$emit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">click1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> params)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">但自我感觉，还是得慎用，全局事件监听</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="uniapp-vuex状态管理" tabindex="-1">uniapp vuex状态管理 <a class="header-anchor" href="#uniapp-vuex状态管理" aria-hidden="true">#</a></h2><p>vuex</p><p>store 文件夹</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> vue</span></span>
<span class="line"><span style="color:#A6ACCD;">import vuex</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">vue.use(vuex)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">export </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> const store = new Vuex.store(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">state</span><span style="color:#F07178;">: {</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    mutations: </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">    actions: </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">在main.js中引入 并使用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">使用和vue中vuex是一样的。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="运行环境判断与跨端兼容" tabindex="-1">运行环境判断与跨端兼容 <a class="header-anchor" href="#运行环境判断与跨端兼容" aria-hidden="true">#</a></h2><p>文档参考： <a href="https://uniapp.dcloud.net.cn/tutorial/platform.html#%E8%B7%A8%E7%AB%AF%E5%85%BC%E5%AE%B9" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/tutorial/platform.html#跨端兼容</a></p><ol><li><p>开发环境 和 生产环境</p><p>p<wbr>rocess.env.NODE_ENV nodeJs 中的</p></li><li><p>判断平台</p><p>在编译时判断，在运行时判断</p><p>小程序无alert 但浏览器有</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">1.</span><span style="color:#A6ACCD;"> 编译时，注释判断，表明在哪里使用</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// #ifdef H5</span></span>
<span class="line"><span style="color:#82AAFF;">alert</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">12333</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// #endif</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;!--</span><span style="color:#A6ACCD;">  #ifdef  </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">PLATFORM</span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">平台特有的组件</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;!--</span><span style="color:#A6ACCD;">  #endif </span><span style="color:#89DDFF;">--&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">2.</span><span style="color:#A6ACCD;"> 用api方法</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getSystemInfoSync</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">platform </span><span style="color:#676E95;font-style:italic;">// 输出当前所在平台</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>跨端兼容</p><p>uniapp对大部分平台做了兼容，但依然会出现无法兼容的情况</p><p>使用注释断言，模仿的是C语言的，这样在编译的时候就进行了处理，会根据注释以及打包的版本进行处理，看是否打包进去。</p></li></ol><h1 id="uniapp-社区论坛项目" tabindex="-1">UniAPP 社区论坛项目 <a class="header-anchor" href="#uniapp-社区论坛项目" aria-hidden="true">#</a></h1><p>基于ThinkSNS</p><p>php + mysql 技术， 核心 + 多应用 + 多插件的产品模式</p><p>gitee thinksns</p><h3 id="项目初始化-ok" tabindex="-1">项目初始化 ok <a class="header-anchor" href="#项目初始化-ok" aria-hidden="true">#</a></h3><ol><li>新建uniapp项目，并创建feeds + me页面</li><li>配置tabBar</li><li>通过npm 引入 uview-ui</li><li>uview-ui在main中使用，并引入主题文件、样式文件</li><li>uview-ui 按需引入</li></ol><h3 id="首页的实现-ok" tabindex="-1">首页的实现 ok <a class="header-anchor" href="#首页的实现-ok" aria-hidden="true">#</a></h3><ol><li>分析首页，整个结构</li><li>swiper 首页轮播图</li><li>首页顶部并没有标题： navigationStyle: &#39;custom&#39;</li><li>点击进行跳转一个外部页面，是开一个webView ，</li><li>当url作为参数的时候是，要用encodeURL 对url进行编码，以及decodeURL进行编码。</li></ol><h3 id="用接口请求数据" tabindex="-1">用接口请求数据 <a class="header-anchor" href="#用接口请求数据" aria-hidden="true">#</a></h3><p><a href="https://v1.uviewui.com/js/http.html" target="_blank" rel="noreferrer">https://v1.uviewui.com/js/http.html</a></p><p><a href="https://v1.uviewui.com/js/apiManage.html" target="_blank" rel="noreferrer">https://v1.uviewui.com/js/apiManage.html</a></p><ol><li>用uview 提供的js进行封装请求</li><li>请求拦截 响应拦截</li><li>api封装在一个文件里面</li><li>然后挂载到vue实例上</li><li>然后再页面中进行使用</li></ol><h3 id="首页-【推荐、资讯】-平滑切换实现" tabindex="-1">首页 【推荐、资讯】 平滑切换实现 <a class="header-anchor" href="#首页-【推荐、资讯】-平滑切换实现" aria-hidden="true">#</a></h3><ol><li><p>用轮播器，取消自动切换</p></li><li><p>然后操作swiper的current值进行操作</p></li><li><p>注册基础信息到vue原型上</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Vue.prototype.BaseUrl = &#39;&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><h3 id="瀑布流" tabindex="-1">瀑布流 <a class="header-anchor" href="#瀑布流" aria-hidden="true">#</a></h3><ol><li><p>用css实现也可以，或者js也行</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">cloumn</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">gap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 10px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">column</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">count</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>但删除一个元素之后，要重新绘制，css布局适合静态数据展示的</p></li><li><p>js的话，用uview的u-waterfall</p><p>轮播图需要一个固定高度，但瀑布流的高度是不固定的，是一致递增的，我们可以动态监听,</p><p>总感觉有点奇怪，需要这样一行一行去监听</p><p><a href="https://xuqu.gitee.io/components/waterfall.html" target="_blank" rel="noreferrer">Waterfall 瀑布流 | uView - 多平台快速开发的UI框架 - uni-app UI框架 (gitee.io)</a></p><p>uView 的 waterfall瀑布流 是分成两行 分别插入</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$u</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getRect</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#u-left-cloumn</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//v1.uviewui.com/js/getRect.html</span></span>
<span class="line"><span style="color:#A6ACCD;">uView 根据 nodesRef</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">boudingClientRect 进行的封装，简化了使用复杂度。</span></span>
<span class="line"><span style="color:#A6ACCD;">默认返回一个Promise 可以用then 或者 async </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> 接收结果</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>swiper要固定传递一个高度，但瀑布流的高度会变化的，所以用uview 提供的this.$u.getRect(selector) 每添加一个块，就获取一次左右两侧的高度，传递给轮播图，对轮播图的高度进行重新设置。也可以自己用 xxx.getBoudingClientRect 获取高度</p></li></ol><h2 id="切换轮播图版块" tabindex="-1">切换轮播图版块 <a class="header-anchor" href="#切换轮播图版块" aria-hidden="true">#</a></h2><p>需求：</p><p>切换轮播图版块的时候，要根据版块设置轮播器的高度</p><p>点击切换 、滑动切换都要 根据切换后的版块的高度，去设置轮播器的当前高度。</p><h2 id="滚动首页-文章的版块-版块导航栏置顶-并切换版块之后-新的版块滚动距离清空" tabindex="-1">滚动首页-文章的版块，版块导航栏置顶，并切换版块之后，新的版块滚动距离清空 <a class="header-anchor" href="#滚动首页-文章的版块-版块导航栏置顶-并切换版块之后-新的版块滚动距离清空" aria-hidden="true">#</a></h2><ol><li><p>NavBar 使用该插件替换导航 资讯、新闻的导航。但弹幕都在说不需要用这个，用uview的吸顶效果就可以了。或者用粘性布局。</p><p>视频中用的是，滚动到一定距离，顶部导航栏显示</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">onPageScroll</span><span style="color:#A6ACCD;">(event) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scrollTop</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">1.</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">滚动到200</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">顶部导航栏显示</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">否则隐藏</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">2.</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">记录当前版块的滚动位置</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">在切换的版块的时候，根据记录的位置，设置版块的滚动位置。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ol><h2 id="滚动到底部请求新数据-下拉页面做刷新" tabindex="-1">滚动到底部请求新数据，下拉页面做刷新 <a class="header-anchor" href="#滚动到底部请求新数据-下拉页面做刷新" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">1.</span><span style="color:#A6ACCD;"> pages</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json  enablePullDownRefresh </span></span>
<span class="line"><span style="color:#F78C6C;">2.</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onPullDownRefresh</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 顶部下拉刷新请求更新数据</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">1.</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">清空已有数据</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">2.</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">重新请求数据</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">3.</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onReachBottom</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">滚动到底部</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">触发</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">用两个页面事件，来监听滚动到头部和底部的事件。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="动态-瀑布流-用-grid-栅格布局" tabindex="-1">动态 瀑布流 用 Grid 栅格布局 <a class="header-anchor" href="#动态-瀑布流-用-grid-栅格布局" aria-hidden="true">#</a></h2><ol><li>获取数据 在onLoad中请求数据，因为onLoad中可以获取路由参数</li></ol><p>其实逻辑没啥特别的，主要是要会gird布局</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">img img </span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">img img</span></span>
<span class="line"><span style="color:#A6ACCD;">img img img</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">img img</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">img</span></span>
<span class="line"><span style="color:#A6ACCD;">img img</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">img</span></span>
<span class="line"><span style="color:#A6ACCD;">img img img</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="2"><li>下拉到底部进行加载</li></ol><h2 id="分包形式-写详情页" tabindex="-1">分包形式 写详情页 <a class="header-anchor" href="#分包形式-写详情页" aria-hidden="true">#</a></h2><p>subPages</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">page</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">subPackages</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>feedInfo.vue</p><p>async onLoad(options) {</p><p>​</p><p>} // 获取动态详情</p><p>可以提自定义编译条件，这样的话刷新页面，url就可以自定义带参数</p><ol><li>分包写详情页面</li><li>在onLoad中获取详情数据</li><li>可以自定义编译条件</li></ol><h2 id="资讯详情页面-富文本解析" tabindex="-1">资讯详情页面 富文本解析 <a class="header-anchor" href="#资讯详情页面-富文本解析" aria-hidden="true">#</a></h2><ol><li><p>毛玻璃效果 pic-blur</p></li><li><p>富文本解析</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">里面的图片占位符 </span><span style="color:#89DDFF;">@!</span><span style="color:#A6ACCD;">[7</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">jpg](</span><span style="color:#F78C6C;">16</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">用正则去匹配 </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">代表任意字符</span></span>
<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">@!</span><span style="color:#A6ACCD;">\\[</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">\\]\\(</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">*)</span><span style="color:#A6ACCD;">\\)</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">g</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span></span>
<span class="line"><span style="color:#A6ACCD;">替换文章正文中的图片占位符</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>html-parse 插件市场有</p></li><li><p>滚动页面，滚动到一定距离就显示顶部导航栏 onPageScroll 事件，滚动距离超过100,显示顶部标题，否则就是正常的操作按钮</p></li></ol><h2 id="封装一个评论组件" tabindex="-1">封装一个评论组件 <a class="header-anchor" href="#封装一个评论组件" aria-hidden="true">#</a></h2><ol><li>样式、交互（自己写的）；</li><li>组件传参，根据当前文章数据获取文章的评论数据；</li><li>组件不是页面，没有页面生命周期函数，比如没有onLoad,所以只能用组件的生命周期函数 created mounted等</li><li>坑：因为文章数据是接口请求回来的，所以直接使用传递给子组件的文章信息会出现空对象报错。用Loading+v-if 处理，数据加载完成后，整个页面才开始进行渲染</li></ol><h2 id="用户登录、注册功能" tabindex="-1">用户登录、注册功能 <a class="header-anchor" href="#用户登录、注册功能" aria-hidden="true">#</a></h2><p>封装成一个全局登录、注册组件，</p><p>跳转到具体的登录页面，然后获取用户信息</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">// 在created中判断 是够被授权了</span></span>
<span class="line"><span style="color:#A6ACCD;">wx.getSetting({</span></span>
<span class="line"><span style="color:#A6ACCD;">	success: res =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">		if(res.authSetting[&#39;scope.userInfo&#39;]) {</span></span>
<span class="line"><span style="color:#A6ACCD;">			uni.getUserInfo({</span></span>
<span class="line"><span style="color:#A6ACCD;">				success: res =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">					this.getUserInfoFlag = false</span></span>
<span class="line"><span style="color:#A6ACCD;">				},</span></span>
<span class="line"><span style="color:#A6ACCD;">				fail: () =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">					console.log(&#39;用户未授权！&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">				}</span></span>
<span class="line"><span style="color:#A6ACCD;">			})</span></span>
<span class="line"><span style="color:#A6ACCD;">		}</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"><span style="color:#A6ACCD;">})</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">微信授权</span></span>
<span class="line"><span style="color:#A6ACCD;">uni.getUserinfo({</span></span>
<span class="line"><span style="color:#A6ACCD;">	success: res =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">		// 获取用户信息成功 进行后续操作</span></span>
<span class="line"><span style="color:#A6ACCD;">	},</span></span>
<span class="line"><span style="color:#A6ACCD;">	fail: () =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">		console.log(&#39;用户未授权！&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"><span style="color:#A6ACCD;">})</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><ol><li>获取当前微信用户的昵称 和 头像信息。</li><li>使用u-form 实现登陆，手机注册、邮箱注册基础逻辑</li><li>使用u-form 实现表单验证相关逻辑</li></ol>`,129),o=[e];function r(c,t,i,u,y,D){return a(),n("div",null,o)}const F=s(p,[["render",r]]);export{b as __pageData,F as default};
